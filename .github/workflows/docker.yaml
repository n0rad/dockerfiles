name: Docker

on:
  push:
    
jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for using the docker cache
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: calculate envvars needed for docker caching
        shell: bash
        run: |
          echo "Configuring environment for https://docs.docker.com/build/cache/backends/gha/"
          # derive the cache URL from the token URL, converting something like
          # https://pipelines.actions.githubusercontent.com/<a long id>/<a lot of things>
          # to something like
          # https://artifactcache.actions.githubusercontent.com/<the long id from above>/
          ACTIONS_CACHE_URL=$(echo "$ACTIONS_ID_TOKEN_REQUEST_URL" | grep -Po 'https://[^/]+/[^/]+/' | sed  's/pipelines/artifactcache/')
          echo "ACTIONS_CACHE_URL=$ACTIONS_CACHE_URL" >> "$GITHUB_ENV"
          echo "ACTIONS_RUNTIME_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> "$GITHUB_ENV"

      - name: Build/Push image
        run: |
          branch=${GITHUB_REF##*/}
          export BUILDX_FLAGS="--cache-to "type=gha,mode=max" --cache-from type=gha"
          if [ "$branch" == "master" ]; then
            export PUSH=true
            export CACHE=false
          else
            FIRST_COMMIT_IN_BRANCH=$(git log --pretty=format:%H origin/master.. | tail -1)
            export COMMIT=$(git log -1 --pretty=format:%H ${FIRST_COMMIT_IN_BRANCH}^)
          fi
          bash -x bin/build-from-git-changes.sh
